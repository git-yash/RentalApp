type BookmarkedRental @model @auth(rules: [{ allow: public }]) {
    id: ID!
    rental: Rental @hasOne
    userID: ID! @index(name: "byUser")
}

type Booking @model @auth(rules: [{ allow: public }]) {
    id: ID!
    startDate: AWSDateTime!
    endDate: AWSDateTime!
    rentalID: ID! @index(name: "byRental")
    userID: ID! @index(name: "byUser")
    rental: Rental @belongsTo(fields: ["rentalID"])
    isAccepted: Boolean!
}

type User @model @auth(rules: [{ allow: public }]) {
    id: ID!
    name: String!
    postedRentals: [Rental] @hasMany(indexName: "byUser", fields: ["id"])
    bookings: [Booking] @hasMany(indexName: "byUser", fields: ["id"])
    reviews: [Review] @hasMany(indexName: "byUser", fields: ["id"])
    bookmarks: [BookmarkedRental] @hasMany(indexName: "byUser", fields: ["id"])
    phone: AWSPhone
    isPhoneVerified: Boolean
}

type Review @model @auth(rules: [{ allow: public }]) {
    id: ID!
    title: String!
    description: String!
    rating: Float
    rentalID: ID! @index(name: "byRental", queryField: "reviewsByRental", sortKeyFields: ["createdAt"])
    userID: ID! @index(name: "byUser")
    user: User @belongsTo(fields: ["userID"])
    rental: Rental @belongsTo(fields: ["rentalID"])
    createdAt: AWSDateTime!
}

type Address {
    street: String!
    street2: String
    city: String!
    state: String!
    zip: String!
    country: String!
}

type Rental @model @auth(rules: [{ allow: public }]) {
    id: ID!
    title: String!
    description: String!
    isAvailable: Int! @index(name: "byAvailability")
    address: Address!
    reviews: [Review] @hasMany(indexName: "byRental", fields: ["id"])
    bookings: [Booking] @hasMany(indexName: "byRental", fields: ["id"])
    userID: ID! @index(name: "byUser")
    user: User @belongsTo(fields: ["userID"])
    categoryName: String! @index(name: "byCategory")
    availabilityCategoryIndex: String! @index(name: "byAvailabilityAndCategory")
    amountHourly: Int
    amountDaily: Int
    amountWeekly: Int
    latitude: Float!
    longitude: Float!
    bookingStartDates: [AWSDateTime]
    bookingEndDates: [AWSDateTime]
    numberOfTimesRented: Int
    numberOfReviews: Int
    averageRating: Float
    numberOfFiveStarRatings: Int
    numberOfFourStarRatings: Int
    numberOfThreeStarRatings: Int
    numberOfTwoStarRatings: Int
    numberOfOneStarRatings: Int
    numberOfRatings: Int
}
